Coding Apple Node.js 강의

1. 서버란 무엇인가??

Wiki : 클라이언트에게 / 네트워크를 통하여 / 정보나 서비를 제공하는 / 컴퓨터 시스템

	>> 클라이언트의 요청에 의해 서비스 제공

말그대로 Server = 서빙하는 사람
음식점에서 고객에 주문에 따라 해당 메뉴(서비스)를 가져옴 

요청 URL + HTTP 헤더, 메서드에 따라 처리 내용을 보냄

서버 = 요청을 처리할 수 있는 기계
요청 = HTTP요청 크게 4개 > CRUD기반 POST(쓰기, 생성 / 로그인할때도 씀) / GET(읽기, 대표 : 브라우저 주소창) / PUT(수정) / DELETE(삭제)


2. Node.js가 무엇인가? = JavaScript Runtime??

기존 JS : HTML(웹페이지를 위한 문서 언어 / 정적)을 조작하기 위한 언어(동적요소를 넣음) >> HTML에 종속됨

	>> 이때 JS 해석은 브라우저가 담당함 >> 브라우저마다 JS해석 엔진이 존재 (크롬:V8 / 파이어폭스:SpiderMonkey 등)

딱 JS가 저 이상 저 이하도 아니었음

>> 근데 크롬의 V8이 너무 성능이 좋은 나머지(그래서 크롬이 랜더링이 빠른 것 JS해석처리가 빠름)
	V8를 기반으로 브라우저 외의 환경에서도 JS를 실행할 수 있게 만든 실행환경(=런타임)

>> Node.js 환경 하 JS를 기존 프로그래밍언어처럼 사용가능하게 됨 >> 쉽게 서버도 만들 수 있음


3. Node.js로 서버를 만드는 가장 큰 이유 : Non-blocking I/O by Event Loop

만약 클라이언트의 예매 요청에 대해 티켓 발행 처리를 제공하는 서버가 있다고 하면 
예를 들어 중간에 단체로 200석을 예매한다고 했을때

전통적인 서버 : 200석 예매를 처리하는 동안 (버거운 요청) 다른 요청을 받지 못함

Node.js 서버 : 고객들의 요청을 모두 받음 >> 요청 순서가 아닌 처리속도가 빠른것부터 처리해줌 >> 중간에 요청을 계속 받음

>> SNS, 채팅 서비스에 좋은 성격 (요청처리가 매우 많음) : 요청이 많거나 오래걸리는 경우도 멈추거나 요청대기시간이 길지 않음 / 갑작스런 대량요청에도 어느정도 버팀

물론 서버도 저런 대용량 처리에 대해 scaling(scale up: 서버를 크게 키움 scale out: 서버를 추가) 혹은 CPU 멀티쓰레딩을 통해
요청처리를 한번에 여러개를 받게 함으로서 어느정도 처리가 가능


그외 코드가 매우 짧고 쉬워서 프로토타입 만들기도 편함(Pivoting도 잘됨)

이런 웹서비스에 좋지만
요청을 한번에 잘 받을 뿐 처리성능이 좋은게 아니기에 수학연산이 필요한 경우(이런건 또 파이썬)
이미지처리서버 등의 경우는 아직 라이브러리 축적이 별로라 안 좋을 수 있음
또 non-blocking은 기존 다른 언어에서도 비슷하게 구현은 가능


4. Node.js, Express 라이브러리 설치

1) Node.js 사이트에서 LTS나 최신버전 다운(10버전 이상으로) 후 기본경로대로 설치

2) CMD나 Powershell(터미널 컴퓨터와 통신위해) 실행(맥은 터미널) : node -v : 설치확인

3) 이후 node 명령어 입력하면 JS 실행환경 실행됨

에디터는 VSCode로

Express 라이브러리로 서버를 짤 것임 (서버 생성 도움)
폴더의 터미널에서 (경로명 잘 확인)
npm init 로 세팅 >> package.json 생성이 주목적
이후 엔터하면서
entry point에서만 (index.js) server.js 입력
NPM은 라이브러리 설치 도구
package.json (라이브러리 설치 기록)

이후
npm install express
로 설치후 package.json로 설치 확인

라이브러리 파일들은 node_modules에 들어있음

npm이 잘 안되면 yarn 설치후 재시작

npm install express = yarn add express

==================================

npm 주요 에러
command not found : node를 잘못 설치할 경우 >> 재설치

권한에러 : 
맥 : (permission denied) >> sudo chown -R ownerName: 에러 경로 (수정 권한 부여) = sudo chown -R $USER 에러 경

윈도우의 경우 : 해당 폴더로 가서 파일 > Powershell 관리자권한으로 실행 > npm 실행 / 아님 cmd에서 해당 폴더 들어가서 npm 실행

윈도우 powershell 보안에러 
powershell 관리자 권한 실행 후 Set-ExecutionPolicy Unrestricted 입력